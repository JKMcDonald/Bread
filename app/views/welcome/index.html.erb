<html>
  <body class='beige'>
    <!-- Example existing Checkout HTML -->
    <p>Checkout below:</p>
    <hr/>
    <h1> DBPOWER T20 Mini Projector Home Theater! </h1>

    <img id="image" src="https://images-na.ssl-images-amazon.com/images/I/411utAweOUL._SL500_AC_SS350_.jpg" alt="Projector"/>
    <p> Sale: $100 </p>

    <!-- Include our button within a form for seamless integration -->
    <form id="checkout-form" action="checkout" method="post">
      <!-- Note that you must pass a div element -->
    
      <div id="bread-checkout-btn" data-bread-default-size=true></div>

    </form>

        <!-- Load the bread.js script (this can be here or usually in the head) -->
    <script src="https://checkout-sandbox.getbread.com/bread.js" data-api-key="7101ea30-8ae3-47ab-a8bd-235860d36f3e"></script>

    <!-- Create the `opts` object -->
    <script type='text/javascript'>
      var cart = {products:  [{name: "Mini Projector", price: 100, sku: "0349j0394fj", detailUrl: "https://www.amazon.com/DBPOWER-T20-Projector-Multimedia-Smartphone/dp/B01LZRUY6Q/ref=pd_lpo_vtph_229_bs_tr_img_1?_encoding=UTF8&psc=1&refRID=ZMXPZ67AYGWG50ACJX57", quantity: 1}]}
      var items = [];
      // We will assume you have a `cart` object which has `products`
      // the shopper has chosen.
      var itemTotal = 0;
      cart.products.forEach(function (p) {
        itemTotal += parseInt((p.price * 100)) * parseInt(p.quantity);
        items.push(
          {
            name: p.name,                       // required
            price: parseInt( (p.price * 100) ), // required (value in cents USD)
            sku: p.sku,                         // required
            imageUrl: p.imgUrl,                 // optional
            detailUrl: p.detailUrl,             // required
            quantity: parseInt(p.quantity)      // required
          }
        );
      });

      // If you have their shipping address already, you can pass it to us
      // so they do not have to fill it out again.
      var shippingContact = {
        firstName: 'Kyle',
        lastName: 'McDonald',
        address:  '225 East 95th street',
        address2: '1D',
        zip:      '24321',
        phone:    '9144177703',
        city:     'NewYork',
        state:    'NY',
      };

      // Likewise, if you have the billing contact, you can pass it in to us
      // so they do not have to.
      var billingContact = {
        email:      'kyle2mcdonald@gmail.com',
        firstName:  'Kyle',
        lastName:   'McDonald',
        address:    '225 East 95th street',
        address2:   'Apt. 1D',
        zip:        '24321',
        phone:     '9144177703',
        city:       'Charleston', 
        state:      'SC', 
      };

      // var billingContact = {
      //   email:      'jane.doe@geocities.com',
      //   firstName:  'Jane',
      //   lastName:   'Doe',
      //   address:    '123 Test St.',
      //   address2:   'Apt. 4',
      //   zip:        '11238',
      //   phone:     '5555555555',
      // };

      // Below, we will build the required opts object.
      var opts = {
        customCSS: "#bread-button,body,html{height:100%;margin:0;width:100%}body{display:table}#bread-button{background:#333;color:red;display:table-cell;font-family:'Times New Roman',Times,serif;font-size:14px;text-align:center;vertical-align:middle}.bread-btn{cursor:pointer}.bread-embed-inner,.bread-label .bread-embed-icon{display:inline-block}.bread-label .bread-embed-icon:after{background:rgba(255,255,255,.5);border-radius:50px;color:#333;content:'i';cursor:pointer;display:inline-block;line-height:1;margin-left:8px;padding:4px 9px}.bread-pot:before{content:'Pay Over Time'}.bread-btn .bread-as-low-as:before,.bread-label .bread-as-low-as:before{content:'As low as '}.bread-for:before{content:'For '}",
        buttonId: 'bread-checkout-btn',
        asLowAs: true,
        items: items,
        // Optional Array of Shipping Options
        shippingOptions: [
          {
            type: '2-day shipping',
            typeId: '2D_001',
            cost: 1350,
          },
          {
            type: 'Overnight',
            typeId: 'O_002',
            cost: 2000,
          }
        ],
        Tax: function() {
          if (shippingContact.state == "NY") {
              return (itemTotal * 0.05)
              }
              else {
                return 0
              } 
              }(),// optional
       
        shippingContact: shippingContact,
        billingContact: billingContact,
        done: function(err, txToken) {
          
            window.location = '/confirm?token=' + txToken; 
          }
        };

      // We will assume your `cart` object has the `total`
      // dollar amount of products in the cart.
      if (cart.total > 2000) {
        // Use a non-default Targeted Financing Program for carts over $2000
        opts.financingProgramId = '38a968d8-da0b-44be-8d7d-d2817c954c29';
      }

      // Lastly, call `checkout` with `opts` as the argument.
      bread.checkout(opts);
    </script>

  </body>
</html>